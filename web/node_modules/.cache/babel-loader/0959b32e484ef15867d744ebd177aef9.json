{"ast":null,"code":"import _classCallCheck from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/src/movie/screens/movie.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport Iframe from 'react-iframe';\nimport { Redirect } from 'react-router';\n\nvar Movie =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Movie, _Component);\n\n  function Movie(props) {\n    var _this;\n\n    _classCallCheck(this, Movie);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Movie).call(this, props));\n    _this.state = {\n      movies: []\n    };\n    return _this;\n  }\n\n  _createClass(Movie, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getMovies(this.props.location.state.id);\n    } // http://192.168.0.62:3333/movies/12/related\n\n  }, {\n    key: \"getMovies\",\n    value: function getMovies(id) {\n      var _this2 = this;\n\n      // const values = queryString.parse(this.props.location.search);\n      axios.get(\"http://192.168.0.62:3333/movies/\" + id + \"/related\").then(function (res) {\n        // console.log(res.data);\n        // this.setState({ lastPage: res.data.lastPage, page: number });\n        _this2.setState({\n          movies: res.data.data\n        });\n      }).catch(function (err) {\n        return alert(err.response);\n      }); // if (this.state.movies === undefined || this.state.movies.length == 0) {\n      //     axios.get(\"http://192.168.0.62:3333/movies?search=\" + values.search + \"&page=\" + number)\n      //         .then(res => {\n      //             // console.log(res.data);\n      //             this.setState({ lastPage: res.data.lastPage, page: number });\n      //             this.setState({ movies: res.data.data });\n      //         })\n      //         .catch(err => alert(err.response))\n      // } else {\n      //     axios.get(\"http://192.168.0.62:3333/movies?search=\" + values.search + \"&page=\" + number)\n      //         .then(res => {\n      //             const pushMovie = [...this.state.movies, ...res.data.data];\n      //             // console.log(pushMovie);\n      //             this.setState({ lastPage: res.data.lastPage, page: number });\n      //             this.setState({ movies: pushMovie });\n      //         })\n      //         .catch(err => alert(err.response))\n      // }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.location.state === undefined) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }); // alert(\"owww\")\n      } // console.log(this.props)\n\n\n      console.log(this.props.location.state.id); // console.log(this.props.location.pathname) //\"/movie/Nonton-\"\n\n      var data = this.props.location.state;\n      return React.createElement(\"div\", {\n        style: {\n          marginTop: 100,\n          marginBottom: \"5vh\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        align: \"center\",\n        style: {\n          marginBottom: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Iframe, {\n        url: data.embed_url,\n        height: \"70vh\",\n        position: \"relative\",\n        id: \"myId\",\n        className: \"myClassname\" // height=\"100%\"\n        // position=\"absolute\"\n        ,\n        width: \"100%\",\n        styles: {\n          maxHeight: \"800px\"\n        },\n        allowFullScreen: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })), React.createElement(\"h2\", {\n        className: \"text-left\",\n        style: {\n          fontSize: 30,\n          fontWeight: 600,\n          lineHeight: 1.4,\n          textTransform: \"capitalize\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, data.title.replace(/(^\\Nonton +|\\ Subtitle Indonesia+$)/mg, '')), React.createElement(\"hr\", {\n        style: {\n          borderTop: \"3px solid white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Col, {\n        style: {\n          marginTop: 10,\n          marginBottom: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, data.description))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: data.thumbnails,\n        alt: data.title,\n        style: {\n          width: \"100%\",\n          borderRadius: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(Col, {\n        xs: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Rating: \", data.rating ? data.rating.substr(0, 3) + ' / 10' : 'no rating', \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Genre: \", data.genre), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Directors: \", data.director), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Writers: \", data.writers))), React.createElement(Row, {\n        style: {\n          marginTop: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"text-left\",\n        style: {\n          fontSize: 20,\n          fontWeight: 600,\n          lineHeight: 1.4,\n          textTransform: \"capitalize\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Related\"))), React.createElement(\"hr\", {\n        style: {\n          borderTop: \"1px solid white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(CardGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        style: {\n          marginBottom: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.state.movies.slice(0, 5).map(function (data) {\n        return React.createElement(\"div\", {\n          key: data.id,\n          className: \"Item\",\n          style: {\n            backgroundImage: 'url(' + data.thumbnails + ')'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: {\n            pathname: '/movie/' + data.slug,\n            state: data\n          },\n          data: data,\n          style: {\n            color: \"white\",\n            textDecoration: \"none\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"overlay\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"title\",\n          style: {\n            lineHeight: 1.2\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, data.title.replace(/(^\\Nonton +|\\ Subtitle Indonesia+$)/mg, '')), React.createElement(\"div\", {\n          className: \"rating\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, data.rating ? data.rating.substr(0, 3) + ' / 10' : 'no rating'), React.createElement(\"div\", {\n          className: \"plot\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, data.description.substr(0, 100) + '..'))));\n      })))));\n    }\n  }]);\n\n  return Movie;\n}(Component);\n\nexport default Movie;","map":{"version":3,"sources":["/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/src/movie/screens/movie.js"],"names":["React","Component","Container","Row","Col","Iframe","Redirect","Movie","props","state","movies","getMovies","location","id","axios","get","then","res","setState","data","catch","err","alert","response","undefined","console","log","marginTop","marginBottom","embed_url","maxHeight","fontSize","fontWeight","lineHeight","textTransform","title","replace","borderTop","description","thumbnails","width","borderRadius","rating","substr","genre","director","writers","slice","map","backgroundImage","pathname","slug","color","textDecoration"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport Iframe from 'react-iframe'\nimport { Redirect } from 'react-router';\n\nclass Movie extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            movies: [],\n        };\n    }\n\n    componentDidMount() {\n        this.getMovies(this.props.location.state.id)\n    }\n\n    // http://192.168.0.62:3333/movies/12/related\n\n    getMovies(id) {\n        // const values = queryString.parse(this.props.location.search);\n        axios.get(\"http://192.168.0.62:3333/movies/\" + id + \"/related\")\n            .then(res => {\n                // console.log(res.data);\n                // this.setState({ lastPage: res.data.lastPage, page: number });\n                this.setState({ movies: res.data.data });\n            })\n            .catch(err => alert(err.response))\n\n        // if (this.state.movies === undefined || this.state.movies.length == 0) {\n        //     axios.get(\"http://192.168.0.62:3333/movies?search=\" + values.search + \"&page=\" + number)\n        //         .then(res => {\n        //             // console.log(res.data);\n        //             this.setState({ lastPage: res.data.lastPage, page: number });\n        //             this.setState({ movies: res.data.data });\n        //         })\n        //         .catch(err => alert(err.response))\n        // } else {\n        //     axios.get(\"http://192.168.0.62:3333/movies?search=\" + values.search + \"&page=\" + number)\n        //         .then(res => {\n        //             const pushMovie = [...this.state.movies, ...res.data.data];\n        //             // console.log(pushMovie);\n        //             this.setState({ lastPage: res.data.lastPage, page: number });\n        //             this.setState({ movies: pushMovie });\n        //         })\n        //         .catch(err => alert(err.response))\n        // }\n\n    }\n\n    render() {\n        if (this.props.location.state === undefined) {\n            return <Redirect to=\"/\" />\n            // alert(\"owww\")\n        }\n\n        // console.log(this.props)\n        console.log(this.props.location.state.id)\n        // console.log(this.props.location.pathname) //\"/movie/Nonton-\"\n\n        const data = this.props.location.state;\n        return (\n            <div style={{ marginTop: 100, marginBottom: \"5vh\" }}>\n                <Container>\n                    <div className=\"col-md-12\" align=\"center\" style={{ marginBottom: 20 }}>\n\n                        <Iframe url={data.embed_url}\n                            height=\"70vh\"\n                            position=\"relative\"\n                            id=\"myId\"\n                            className=\"myClassname\"\n                            // height=\"100%\"\n                            // position=\"absolute\"\n                            width=\"100%\"\n                            styles={{ maxHeight: \"800px\" }}\n                            allowFullScreen />\n                    </div>\n                    <h2 className=\"text-left\" style={{ fontSize: 30, fontWeight: 600, lineHeight: 1.4, textTransform: \"capitalize\" }}>{data.title.replace(/(^\\Nonton +|\\ Subtitle Indonesia+$)/mg, '')}</h2>\n                    <hr style={{ borderTop: \"3px solid white\" }} />\n                    <Row>\n                        <Col style={{ marginTop: 10, marginBottom: 20 }}>\n                            <p>{data.description}</p>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs=\"3\" >\n                            <img src={data.thumbnails} alt={data.title} style={{ width: \"100%\", borderRadius: 5 }} />\n                        </Col>\n                        <Col xs=\"auto\">\n                            <p>Rating: {data.rating ? data.rating.substr(0, 3) + ' / 10' : 'no rating'} </p>\n                            <p>Genre: {data.genre}</p>\n                            <p>Directors: {data.director}</p>\n                            <p>Writers: {data.writers}</p>\n                            {/* <p>Description: {data.description}</p> */}\n                        </Col>\n                    </Row>\n\n                    <Row style={{ marginTop: 30 }}>\n                        <Col>\n                            <h2 className=\"text-left\" style={{ fontSize: 20, fontWeight: 600, lineHeight: 1.4, textTransform: \"capitalize\" }}>Related</h2>\n                        </Col>\n                    </Row>\n                    <hr style={{ borderTop: \"1px solid white\" }} />\n                    <CardGroup>\n                        <div className=\"row\" style={{ marginBottom: 30 }}>\n                            {\n                                this.state.movies.slice(0, 5).map(data =>\n                                    <div key={data.id} className=\"Item\" style={{ backgroundImage: 'url(' + data.thumbnails + ')' }} >\n                                        <Link to={{ pathname: '/movie/' + data.slug, state: data }} data={data} style={{ color: \"white\", textDecoration: \"none\" }}>\n                                            <div className=\"overlay\">\n                                                <div className=\"title\" style={{ lineHeight: 1.2 }}>{data.title.replace(/(^\\Nonton +|\\ Subtitle Indonesia+$)/mg, '')}</div>\n                                                <div className=\"rating\">\n                                                    {data.rating ?\n                                                        data.rating.substr(0, 3) + ' / 10'\n                                                        : 'no rating'\n                                                    }\n                                                </div>\n                                                <div className=\"plot\">{data.description.substr(0, 100) + '..'}</div>\n                                            </div>\n                                        </Link>\n                                    </div>\n                                )\n                            }\n                        </div>\n                    </CardGroup>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default Movie;"]},"metadata":{},"sourceType":"module"}