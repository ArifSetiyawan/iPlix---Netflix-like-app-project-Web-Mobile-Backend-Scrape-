{"ast":null,"code":"import _classCallCheck from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/src/movie/screens/movie.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, CardGroup } from 'reactstrap';\nimport Iframe from 'react-iframe';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nvar Movie =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Movie, _Component);\n\n  function Movie(props) {\n    var _this;\n\n    _classCallCheck(this, Movie);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Movie).call(this, props));\n    _this.state = {\n      movies: []\n    };\n    return _this;\n  }\n\n  _createClass(Movie, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getMovies(this.props.location.state.id);\n    }\n  }, {\n    key: \"getMovies\",\n    value: function getMovies(id) {\n      var _this2 = this;\n\n      axios.get(\"http://192.168.0.62:3333/movies/\" + id + \"/related\").then(function (res) {\n        // console.log(res.data);\n        // this.setState({ lastPage: res.data.lastPage, page: number });\n        _this2.setState({\n          movies: res.data.data\n        });\n      }).catch(function (err) {\n        return alert(err.response);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // if no movies\n      if (this.props.location.state === undefined) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }); // alert(\"owww\")\n      } // console.log(this.props)\n      // console.log(this.props.location.state.id)\n      // console.log(this.props.location.pathname) //\"/movie/Nonton-\"\n\n\n      var data = this.props.location.state;\n      return React.createElement(\"div\", {\n        style: {\n          marginTop: 100,\n          marginBottom: \"5vh\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        align: \"center\",\n        style: {\n          marginBottom: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Iframe, {\n        url: data.embed_url,\n        height: \"70vh\",\n        position: \"relative\",\n        id: \"myId\",\n        className: \"myClassname\" // height=\"100%\"\n        // position=\"absolute\"\n        ,\n        width: \"100%\",\n        styles: {\n          maxHeight: \"800px\"\n        },\n        allowFullScreen: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(\"h2\", {\n        className: \"text-left\",\n        style: {\n          fontSize: 30,\n          fontWeight: 600,\n          lineHeight: 1.4,\n          textTransform: \"capitalize\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, data.title.replace(/(^\\Nonton +|\\ Subtitle Indonesia+$)/mg, '')), React.createElement(\"hr\", {\n        style: {\n          borderTop: \"3px solid white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Col, {\n        style: {\n          marginTop: 10,\n          marginBottom: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, data.description))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: data.thumbnails,\n        alt: data.title,\n        style: {\n          width: \"100%\",\n          borderRadius: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(Col, {\n        xs: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Rating: \", data.rating ? data.rating.substr(0, 3) + ' / 10' : 'no rating', \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Genre: \", data.genre), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Directors: \", data.director), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Writers: \", data.writers))), React.createElement(Row, {\n        style: {\n          marginTop: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"text-left\",\n        style: {\n          fontSize: 20,\n          fontWeight: 600,\n          lineHeight: 1.4,\n          textTransform: \"capitalize\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Related\"))), React.createElement(\"hr\", {\n        style: {\n          borderTop: \"1px solid white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(CardGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        style: {\n          marginBottom: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, this.state.movies.slice(0, 5).map(function (data) {\n        return React.createElement(\"div\", {\n          key: data.id,\n          className: \"Item\",\n          style: {\n            backgroundImage: 'url(' + data.thumbnails + ')'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: {\n            pathname: '/movie/' + data.slug,\n            state: data\n          },\n          data: data,\n          style: {\n            color: \"white\",\n            textDecoration: \"none\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"overlay\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"title\",\n          style: {\n            lineHeight: 1.2\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, data.title.replace(/(^\\Nonton +|\\ Subtitle Indonesia+$)/mg, '')), React.createElement(\"div\", {\n          className: \"rating\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, data.rating ? data.rating.substr(0, 3) + ' / 10' : 'no rating'), React.createElement(\"div\", {\n          className: \"plot\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, data.description.substr(0, 100) + '..'))));\n      })))));\n    }\n  }]);\n\n  return Movie;\n}(Component);\n\nexport default Movie;","map":{"version":3,"sources":["/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/src/movie/screens/movie.js"],"names":["React","Component","Container","Row","Col","CardGroup","Iframe","Redirect","Link","axios","Movie","props","state","movies","getMovies","location","id","get","then","res","setState","data","catch","err","alert","response","undefined","marginTop","marginBottom","embed_url","maxHeight","fontSize","fontWeight","lineHeight","textTransform","title","replace","borderTop","description","thumbnails","width","borderRadius","rating","substr","genre","director","writers","slice","map","backgroundImage","pathname","slug","color","textDecoration"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,SAA9B,QAA+C,YAA/C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAFe;AAKlB;;;;wCAEmB;AAChB,WAAKC,SAAL,CAAe,KAAKH,KAAL,CAAWI,QAAX,CAAoBH,KAApB,CAA0BI,EAAzC;AACH;;;8BAGSA,E,EAAI;AAAA;;AACVP,MAAAA,KAAK,CAACQ,GAAN,CAAU,qCAAqCD,EAArC,GAA0C,UAApD,EACKE,IADL,CACU,UAAAC,GAAG,EAAI;AACT;AACA;AACA,QAAA,MAAI,CAACC,QAAL,CAAc;AAAEP,UAAAA,MAAM,EAAEM,GAAG,CAACE,IAAJ,CAASA;AAAnB,SAAd;AACH,OALL,EAMKC,KANL,CAMW,UAAAC,GAAG;AAAA,eAAIC,KAAK,CAACD,GAAG,CAACE,QAAL,CAAT;AAAA,OANd;AAOH;;;6BAEQ;AACL;AACA,UAAI,KAAKd,KAAL,CAAWI,QAAX,CAAoBH,KAApB,KAA8Bc,SAAlC,EAA6C;AACzC,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CADyC,CAEzC;AACH,OALI,CAOL;AACA;AACA;;;AAEA,UAAML,IAAI,GAAG,KAAKV,KAAL,CAAWI,QAAX,CAAoBH,KAAjC;AACA,aACI;AAAK,QAAA,KAAK,EAAE;AAAEe,UAAAA,SAAS,EAAE,GAAb;AAAkBC,UAAAA,YAAY,EAAE;AAAhC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,KAAK,EAAC,QAAjC;AAA0C,QAAA,KAAK,EAAE;AAAEA,UAAAA,YAAY,EAAE;AAAhB,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAEP,IAAI,CAACQ,SAAlB;AACI,QAAA,MAAM,EAAC,MADX;AAEI,QAAA,QAAQ,EAAC,UAFb;AAGI,QAAA,EAAE,EAAC,MAHP;AAII,QAAA,SAAS,EAAC,aAJd,CAKI;AACA;AANJ;AAOI,QAAA,KAAK,EAAC,MAPV;AAQI,QAAA,MAAM,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SARZ;AASI,QAAA,eAAe,MATnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAcI;AAAI,QAAA,SAAS,EAAC,WAAd;AAA0B,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE,EAAZ;AAAgBC,UAAAA,UAAU,EAAE,GAA5B;AAAiCC,UAAAA,UAAU,EAAE,GAA7C;AAAkDC,UAAAA,aAAa,EAAE;AAAjE,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmHb,IAAI,CAACc,KAAL,CAAWC,OAAX,CAAmB,uCAAnB,EAA4D,EAA5D,CAAnH,CAdJ,EAeI;AAAI,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,EAgBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEV,UAAAA,SAAS,EAAE,EAAb;AAAiBC,UAAAA,YAAY,EAAE;AAA/B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIP,IAAI,CAACiB,WAAT,CADJ,CADJ,CAhBJ,EAqBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAEjB,IAAI,CAACkB,UAAf;AAA2B,QAAA,GAAG,EAAElB,IAAI,CAACc,KAArC;AAA4C,QAAA,KAAK,EAAE;AAAEK,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,YAAY,EAAE;AAA/B,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAYpB,IAAI,CAACqB,MAAL,GAAcrB,IAAI,CAACqB,MAAL,CAAYC,MAAZ,CAAmB,CAAnB,EAAsB,CAAtB,IAA2B,OAAzC,GAAmD,WAA/D,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAWtB,IAAI,CAACuB,KAAhB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAevB,IAAI,CAACwB,QAApB,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAaxB,IAAI,CAACyB,OAAlB,CAJJ,CAJJ,CArBJ,EAkCI,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEnB,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,WAAd;AAA0B,QAAA,KAAK,EAAE;AAAEI,UAAAA,QAAQ,EAAE,EAAZ;AAAgBC,UAAAA,UAAU,EAAE,GAA5B;AAAiCC,UAAAA,UAAU,EAAE,GAA7C;AAAkDC,UAAAA,aAAa,EAAE;AAAjE,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,CAlCJ,EAuCI;AAAI,QAAA,KAAK,EAAE;AAAEG,UAAAA,SAAS,EAAE;AAAb,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvCJ,EAwCI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAqB,QAAA,KAAK,EAAE;AAAET,UAAAA,YAAY,EAAE;AAAhB,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,KAAKhB,KAAL,CAAWC,MAAX,CAAkBkC,KAAlB,CAAwB,CAAxB,EAA2B,CAA3B,EAA8BC,GAA9B,CAAkC,UAAA3B,IAAI;AAAA,eAClC;AAAK,UAAA,GAAG,EAAEA,IAAI,CAACL,EAAf;AAAmB,UAAA,SAAS,EAAC,MAA7B;AAAoC,UAAA,KAAK,EAAE;AAAEiC,YAAAA,eAAe,EAAE,SAAS5B,IAAI,CAACkB,UAAd,GAA2B;AAA9C,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAE;AAAEW,YAAAA,QAAQ,EAAE,YAAY7B,IAAI,CAAC8B,IAA7B;AAAmCvC,YAAAA,KAAK,EAAES;AAA1C,WAAV;AAA4D,UAAA,IAAI,EAAEA,IAAlE;AAAwE,UAAA,KAAK,EAAE;AAAE+B,YAAAA,KAAK,EAAE,OAAT;AAAkBC,YAAAA,cAAc,EAAE;AAAlC,WAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAuB,UAAA,KAAK,EAAE;AAAEpB,YAAAA,UAAU,EAAE;AAAd,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoDZ,IAAI,CAACc,KAAL,CAAWC,OAAX,CAAmB,uCAAnB,EAA4D,EAA5D,CAApD,CADJ,EAEI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKf,IAAI,CAACqB,MAAL,GACGrB,IAAI,CAACqB,MAAL,CAAYC,MAAZ,CAAmB,CAAnB,EAAsB,CAAtB,IAA2B,OAD9B,GAEK,WAHV,CAFJ,EAQI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuBtB,IAAI,CAACiB,WAAL,CAAiBK,MAAjB,CAAwB,CAAxB,EAA2B,GAA3B,IAAkC,IAAzD,CARJ,CADJ,CADJ,CADkC;AAAA,OAAtC,CAFR,CADJ,CAxCJ,CADJ,CADJ;AAmEH;;;;EAtGe1C,S;;AAyGpB,eAAeS,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Row, Col, CardGroup } from 'reactstrap';\nimport Iframe from 'react-iframe'\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom'\nimport axios from 'axios';\n\nclass Movie extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            movies: [],\n        };\n    }\n\n    componentDidMount() {\n        this.getMovies(this.props.location.state.id)\n    }\n\n\n    getMovies(id) {\n        axios.get(\"http://192.168.0.62:3333/movies/\" + id + \"/related\")\n            .then(res => {\n                // console.log(res.data);\n                // this.setState({ lastPage: res.data.lastPage, page: number });\n                this.setState({ movies: res.data.data });\n            })\n            .catch(err => alert(err.response))\n    }\n\n    render() {\n        // if no movies\n        if (this.props.location.state === undefined) {\n            return <Redirect to=\"/\" />\n            // alert(\"owww\")\n        }\n\n        // console.log(this.props)\n        // console.log(this.props.location.state.id)\n        // console.log(this.props.location.pathname) //\"/movie/Nonton-\"\n\n        const data = this.props.location.state;\n        return (\n            <div style={{ marginTop: 100, marginBottom: \"5vh\" }}>\n                <Container>\n                    <div className=\"col-md-12\" align=\"center\" style={{ marginBottom: 20 }}>\n\n                        <Iframe url={data.embed_url}\n                            height=\"70vh\"\n                            position=\"relative\"\n                            id=\"myId\"\n                            className=\"myClassname\"\n                            // height=\"100%\"\n                            // position=\"absolute\"\n                            width=\"100%\"\n                            styles={{ maxHeight: \"800px\" }}\n                            allowFullScreen />\n                    </div>\n                    <h2 className=\"text-left\" style={{ fontSize: 30, fontWeight: 600, lineHeight: 1.4, textTransform: \"capitalize\" }}>{data.title.replace(/(^\\Nonton +|\\ Subtitle Indonesia+$)/mg, '')}</h2>\n                    <hr style={{ borderTop: \"3px solid white\" }} />\n                    <Row>\n                        <Col style={{ marginTop: 10, marginBottom: 20 }}>\n                            <p>{data.description}</p>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs=\"3\" >\n                            <img src={data.thumbnails} alt={data.title} style={{ width: \"100%\", borderRadius: 5 }} />\n                        </Col>\n                        <Col xs=\"auto\">\n                            <p>Rating: {data.rating ? data.rating.substr(0, 3) + ' / 10' : 'no rating'} </p>\n                            <p>Genre: {data.genre}</p>\n                            <p>Directors: {data.director}</p>\n                            <p>Writers: {data.writers}</p>\n                            {/* <p>Description: {data.description}</p> */}\n                        </Col>\n                    </Row>\n\n                    <Row style={{ marginTop: 30 }}>\n                        <Col>\n                            <h2 className=\"text-left\" style={{ fontSize: 20, fontWeight: 600, lineHeight: 1.4, textTransform: \"capitalize\" }}>Related</h2>\n                        </Col>\n                    </Row>\n                    <hr style={{ borderTop: \"1px solid white\" }} />\n                    <CardGroup>\n                        <div className=\"row\" style={{ marginBottom: 30 }}>\n                            {\n                                this.state.movies.slice(0, 5).map(data =>\n                                    <div key={data.id} className=\"Item\" style={{ backgroundImage: 'url(' + data.thumbnails + ')' }} >\n                                        <Link to={{ pathname: '/movie/' + data.slug, state: data }} data={data} style={{ color: \"white\", textDecoration: \"none\" }}>\n                                            <div className=\"overlay\">\n                                                <div className=\"title\" style={{ lineHeight: 1.2 }}>{data.title.replace(/(^\\Nonton +|\\ Subtitle Indonesia+$)/mg, '')}</div>\n                                                <div className=\"rating\">\n                                                    {data.rating ?\n                                                        data.rating.substr(0, 3) + ' / 10'\n                                                        : 'no rating'\n                                                    }\n                                                </div>\n                                                <div className=\"plot\">{data.description.substr(0, 100) + '..'}</div>\n                                            </div>\n                                        </Link>\n                                    </div>\n                                )\n                            }\n                        </div>\n                    </CardGroup>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default Movie;"]},"metadata":{},"sourceType":"module"}