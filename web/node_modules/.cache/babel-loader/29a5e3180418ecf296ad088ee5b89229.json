{"ast":null,"code":"import _classCallCheck from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/src/movie/screens/movie.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, CardGroup } from 'reactstrap';\nimport Iframe from 'react-iframe';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nvar Movie =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Movie, _Component);\n\n  function Movie(props) {\n    var _this;\n\n    _classCallCheck(this, Movie);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Movie).call(this, props));\n    _this.state = {\n      movies: []\n    };\n    return _this;\n  }\n\n  _createClass(Movie, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getMovies(this.props.location.state.id);\n    }\n  }, {\n    key: \"getMovies\",\n    value: function getMovies(id) {\n      var _this2 = this;\n\n      axios.get(\"http://192.168.0.62:3333/movies/\" + id + \"/related\").then(function (res) {\n        // console.log(res.data);\n        // this.setState({ lastPage: res.data.lastPage, page: number });\n        _this2.setState({\n          movies: res.data.data\n        });\n      }).catch(function (err) {\n        return alert(err.response);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // if no movies\n      if (this.props.location.state === undefined) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }); // alert(\"owww\")\n      } // console.log(this.props)\n      // console.log(this.props.location.state.id)\n      // console.log(this.props.location.pathname) //\"/movie/Nonton-\"\n\n\n      var data = this.props.location.state;\n      return (// <div style={{ marginTop: 100, marginBottom: \"5vh\" }}>\n        React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-md-12\",\n          align: \"center\",\n          style: {\n            marginBottom: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(Iframe, {\n          url: data.embed_url,\n          height: \"70vh\",\n          position: \"relative\",\n          id: \"myId\",\n          className: \"myClassname\" // height=\"100%\"\n          // position=\"absolute\"\n          ,\n          width: \"100%\",\n          styles: {\n            maxHeight: \"800px\"\n          },\n          allowFullScreen: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        })), React.createElement(\"h2\", {\n          className: \"text-left\",\n          style: {\n            fontSize: 30,\n            fontWeight: 600,\n            lineHeight: 1.4,\n            textTransform: \"capitalize\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, data.title.replace(/(^\\Nonton +|\\ Subtitle Indonesia+$)/mg, '')), React.createElement(\"hr\", {\n          style: {\n            borderTop: \"3px solid white\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(Col, {\n          style: {\n            marginTop: 10,\n            marginBottom: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, data.description))), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(Col, {\n          xs: \"3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: data.thumbnails,\n          alt: data.title,\n          style: {\n            width: \"100%\",\n            borderRadius: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        })), React.createElement(Col, {\n          xs: \"auto\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"Rating: \", data.rating ? data.rating.substr(0, 3) + ' / 10' : 'no rating', \" \"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"Genre: \", data.genre), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"Directors: \", data.director), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"Writers: \", data.writers))), React.createElement(Row, {\n          style: {\n            marginTop: 30\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          className: \"text-left\",\n          style: {\n            fontSize: 20,\n            fontWeight: 600,\n            lineHeight: 1.4,\n            textTransform: \"capitalize\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"Related\"))), React.createElement(\"hr\", {\n          style: {\n            borderTop: \"1px solid white\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }), React.createElement(CardGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          style: {\n            marginBottom: 30,\n            marginLeft: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, this.state.movies.slice(0, 5).map(function (data) {\n          return React.createElement(\"div\", {\n            key: data.id,\n            className: \"Item\",\n            style: {\n              backgroundImage: 'url(' + data.thumbnails + ')'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: {\n              pathname: '/movie/' + data.slug,\n              state: data\n            },\n            data: data,\n            style: {\n              color: \"white\",\n              textDecoration: \"none\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"overlay\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"title\",\n            style: {\n              lineHeight: 1.2\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, data.title.replace(/(^\\Nonton +|\\ Subtitle Indonesia+$)/mg, '')), React.createElement(\"div\", {\n            className: \"rating\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, data.rating ? data.rating.substr(0, 3) + ' / 10' : 'no rating'), React.createElement(\"div\", {\n            className: \"plot\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, data.description.substr(0, 100) + '..'))));\n        })))) // </div>\n\n      );\n    }\n  }]);\n\n  return Movie;\n}(Component);\n\nexport default Movie;","map":{"version":3,"sources":["/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/src/movie/screens/movie.js"],"names":["React","Component","Container","Row","Col","CardGroup","Iframe","Redirect","Link","axios","Movie","props","state","movies","getMovies","location","id","get","then","res","setState","data","catch","err","alert","response","undefined","marginBottom","embed_url","maxHeight","fontSize","fontWeight","lineHeight","textTransform","title","replace","borderTop","marginTop","description","thumbnails","width","borderRadius","rating","substr","genre","director","writers","marginLeft","slice","map","backgroundImage","pathname","slug","color","textDecoration"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Row, Col, CardGroup } from 'reactstrap';\nimport Iframe from 'react-iframe'\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom'\nimport axios from 'axios';\n\nclass Movie extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            movies: [],\n        };\n    }\n\n    componentDidMount() {\n        this.getMovies(this.props.location.state.id)\n    }\n\n\n    getMovies(id) {\n        axios.get(\"http://192.168.0.62:3333/movies/\" + id + \"/related\")\n            .then(res => {\n                // console.log(res.data);\n                // this.setState({ lastPage: res.data.lastPage, page: number });\n                this.setState({ movies: res.data.data });\n            })\n            .catch(err => alert(err.response))\n    }\n\n    render() {\n        // if no movies\n        if (this.props.location.state === undefined) {\n            return <Redirect to=\"/\" />\n            // alert(\"owww\")\n        }\n\n        // console.log(this.props)\n        // console.log(this.props.location.state.id)\n        // console.log(this.props.location.pathname) //\"/movie/Nonton-\"\n\n        const data = this.props.location.state;\n        return (\n            // <div style={{ marginTop: 100, marginBottom: \"5vh\" }}>\n                <Container>\n                    <div className=\"col-md-12\" align=\"center\" style={{ marginBottom: 20 }}>\n\n                        <Iframe url={data.embed_url}\n                            height=\"70vh\"\n                            position=\"relative\"\n                            id=\"myId\"\n                            className=\"myClassname\"\n                            // height=\"100%\"\n                            // position=\"absolute\"\n                            width=\"100%\"\n                            styles={{ maxHeight: \"800px\" }}\n                            allowFullScreen />\n                    </div>\n                    <h2 className=\"text-left\" style={{ fontSize: 30, fontWeight: 600, lineHeight: 1.4, textTransform: \"capitalize\" }}>{data.title.replace(/(^\\Nonton +|\\ Subtitle Indonesia+$)/mg, '')}</h2>\n                    <hr style={{ borderTop: \"3px solid white\" }} />\n                    <Row>\n                        <Col style={{ marginTop: 10, marginBottom: 20 }}>\n                            <p>{data.description}</p>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs=\"3\" >\n                            <img src={data.thumbnails} alt={data.title} style={{ width: \"100%\", borderRadius: 5 }} />\n                        </Col>\n                        <Col xs=\"auto\">\n                            <p>Rating: {data.rating ? data.rating.substr(0, 3) + ' / 10' : 'no rating'} </p>\n                            <p>Genre: {data.genre}</p>\n                            <p>Directors: {data.director}</p>\n                            <p>Writers: {data.writers}</p>\n                            {/* <p>Description: {data.description}</p> */}\n                        </Col>\n                    </Row>\n\n                    <Row style={{ marginTop: 30 }}>\n                        <Col>\n                            <h2 className=\"text-left\" style={{ fontSize: 20, fontWeight: 600, lineHeight: 1.4, textTransform: \"capitalize\" }}>Related</h2>\n                        </Col>\n                    </Row>\n                    <hr style={{ borderTop: \"1px solid white\" }} />\n                    <CardGroup>\n                        <div className=\"row\" style={{ marginBottom: 30, marginLeft: 0 }}>\n                            {\n                                this.state.movies.slice(0, 5).map(data =>\n                                    <div key={data.id} className=\"Item\" style={{ backgroundImage: 'url(' + data.thumbnails + ')' }} >\n                                        <Link to={{ pathname: '/movie/' + data.slug, state: data }} data={data} style={{ color: \"white\", textDecoration: \"none\" }}>\n                                            <div className=\"overlay\">\n                                                <div className=\"title\" style={{ lineHeight: 1.2 }}>{data.title.replace(/(^\\Nonton +|\\ Subtitle Indonesia+$)/mg, '')}</div>\n                                                <div className=\"rating\">\n                                                    {data.rating ?\n                                                        data.rating.substr(0, 3) + ' / 10'\n                                                        : 'no rating'\n                                                    }\n                                                </div>\n                                                <div className=\"plot\">{data.description.substr(0, 100) + '..'}</div>\n                                            </div>\n                                        </Link>\n                                    </div>\n                                )\n                            }\n                        </div>\n                    </CardGroup>\n                </Container>\n            // </div>\n        );\n    }\n}\n\nexport default Movie;"]},"metadata":{},"sourceType":"module"}