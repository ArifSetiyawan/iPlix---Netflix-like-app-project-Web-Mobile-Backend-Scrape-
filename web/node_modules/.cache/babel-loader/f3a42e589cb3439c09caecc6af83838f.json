{"ast":null,"code":"import _classCallCheck from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/src/movie/screens/movie.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\nimport Iframe from 'react-iframe';\n\nvar Movie =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Movie, _Component);\n\n  function Movie() {\n    _classCallCheck(this, Movie);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Movie).apply(this, arguments));\n  }\n\n  _createClass(Movie, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.location.state);\n      var data = this.props.location.state;\n      return React.createElement(\"div\", {\n        style: {\n          marginTop: 100,\n          marginBottom: \"5vh\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        align: \"center\",\n        style: {\n          marginBottom: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(Iframe, {\n        url: data.embed_url,\n        height: \"70vh\",\n        position: \"relative\",\n        id: \"myId\",\n        className: \"myClassname\" // height=\"100%\"\n        // position=\"absolute\"\n        // width=\"100%\"\n        ,\n        styles: {\n          maxHeight: \"800px\"\n        },\n        allowFullScreen: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      })), React.createElement(\"h2\", {\n        className: \"text-center\",\n        style: {\n          fontSize: 30,\n          fontWeight: 600,\n          lineHeight: 1.4,\n          textTransform: \"capitalize\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, data.title.replace(/(^\\Nonton +|\\ Subtitle Indonesia+$)/mg, '')), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: data.thumbnails,\n        alt: data.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })), React.createElement(Col, {\n        xs: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Rating: \", data.rating ? data.rating.substr(0, 3) + ' / 10' : 'no rating'), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Genre: \", data.genre), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Description: \", data.description), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Country: \", data.country), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Language: \", data.language), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Release: \", data.release), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Writers: \", data.writers), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Directors: \", data.director), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Genre: \", data.genre)))));\n    }\n  }]);\n\n  return Movie;\n}(Component);\n\nexport default Movie;","map":{"version":3,"sources":["/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/src/movie/screens/movie.js"],"names":["React","Component","Link","Container","Row","Col","Iframe","Movie","console","log","props","location","state","data","marginTop","marginBottom","embed_url","maxHeight","fontSize","fontWeight","lineHeight","textTransform","title","replace","thumbnails","rating","substr","genre","description","country","language","release","writers","director"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport { Container, Row, Col } from 'reactstrap';\nimport Iframe from 'react-iframe'\n\nclass Movie extends Component {\n\n    render() {\n        console.log(this.props.location.state)\n        const data = this.props.location.state;\n        return (\n            <div style={{ marginTop: 100, marginBottom: \"5vh\" }}>\n                <Container>\n                    {/* <div className=\"row p-3\">\n                        <div className=\"col-md-12\">\n                            <h2 className=\"text-left\">Movie ID: {this.props.match.params.id}</h2>\n                        </div>\n                    </div> */}\n                    <div className=\"col-md-12\" align=\"center\" style={{ marginBottom: 20 }}>\n\n                        <Iframe url={data.embed_url}\n                            height=\"70vh\"\n                            position=\"relative\"\n                            id=\"myId\"\n                            className=\"myClassname\"\n                            // height=\"100%\"\n                            // position=\"absolute\"\n                            // width=\"100%\"\n                            styles={{ maxHeight: \"800px\" }}\n                            allowFullScreen />\n                    </div>\n                    <h2 className=\"text-center\" style={{ fontSize: 30, fontWeight: 600, lineHeight: 1.4, textTransform: \"capitalize\" }}>{data.title.replace(/(^\\Nonton +|\\ Subtitle Indonesia+$)/mg, '')}</h2>\n                    <hr />\n                    <Row>\n                        <Col xs=\"3\">\n                            <img src={data.thumbnails} alt={data.title} />\n                        </Col>\n                        <Col xs=\"auto\">\n                            <p>Rating: {data.rating ?\n                                data.rating.substr(0, 3) + ' / 10'\n                                : 'no rating'\n                            }</p>\n                            <p>Genre: {data.genre}</p>\n                            <p>Description: {data.description}</p>\n                            <p>Country: {data.country}</p>\n                            <p>Language: {data.language}</p>\n                            <p>Release: {data.release}</p>\n                            <p>Writers: {data.writers}</p>\n                            <p>Directors: {data.director}</p>\n                            <p>Genre: {data.genre}</p>\n                        </Col>\n                    </Row>\n\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default Movie;"]},"metadata":{},"sourceType":"module"}