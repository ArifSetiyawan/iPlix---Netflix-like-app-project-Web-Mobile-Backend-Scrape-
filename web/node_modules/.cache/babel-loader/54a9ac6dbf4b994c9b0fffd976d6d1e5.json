{"ast":null,"code":"var _jsxFileName = \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/src/auth/components/loginForm.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Button, FormControl } from \"react-bootstrap\";\n\nvar required = function required(value) {\n  return value ? undefined : 'Required!';\n};\n\nvar renderField = function renderField(_ref) {\n  var input = _ref.input,\n      label = _ref.label,\n      type = _ref.type,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error,\n      warning = _ref$meta.warning;\n  return React.createElement(\"div\", {\n    style: {\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, touched && error && React.createElement(\"span\", {\n    style: {\n      fontWeight: \"bold\",\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, error), React.createElement(FormControl, Object.assign({}, input, {\n    placeholder: label,\n    type: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  })));\n};\n\nvar LoginForm = function LoginForm(props) {\n  var handleSubmit = props.handleSubmit,\n      submitting = props.submitting;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      marginTop: 50,\n      marginBottom: 50\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"username\",\n    type: \"text\",\n    component: renderField,\n    label: \"Username\",\n    validate: required,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"password\",\n    type: \"password\",\n    component: renderField,\n    label: \"Password\",\n    validate: required,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    disabled: submitting,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nexport default reduxForm({\n  form: 'LoginForm' // a unique identifier for this form\n\n})(LoginForm);","map":{"version":3,"sources":["/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/src/auth/components/loginForm.js"],"names":["React","Field","reduxForm","Button","FormControl","required","value","undefined","renderField","input","label","type","meta","touched","error","warning","marginBottom","fontWeight","color","LoginForm","props","handleSubmit","submitting","marginTop","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,iBAApC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,SAAIA,KAAK,GAAGC,SAAH,GAAe,WAAxB;AAAA,CAAtB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,KAAV,QAAUA,KAAV;AAAA,MAAiBC,IAAjB,QAAiBA,IAAjB;AAAA,uBAAuBC,IAAvB;AAAA,MAA+BC,OAA/B,aAA+BA,OAA/B;AAAA,MAAwCC,KAAxC,aAAwCA,KAAxC;AAAA,MAA+CC,OAA/C,aAA+CA,OAA/C;AAAA,SAChB;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACSH,OAAO,IAAMC,KAAK,IAAI;AAAM,IAAA,KAAK,EAAE;AAAEG,MAAAA,UAAU,EAAE,MAAd;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoDJ,KAApD,CAD/B,EAEQ,oBAAC,WAAD,oBAAiBL,KAAjB;AAAwB,IAAA,WAAW,EAAEC,KAArC;AAA4C,IAAA,IAAI,EAAEC,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFR,CADgB;AAAA,CAApB;;AAOA,IAAMQ,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAAA,MACjBC,YADiB,GACYD,KADZ,CACjBC,YADiB;AAAA,MACHC,UADG,GACYF,KADZ,CACHE,UADG;AAEzB,SACI;AAAM,IAAA,QAAQ,EAAED,YAAhB;AAA8B,IAAA,KAAK,EAAE;AAAEE,MAAAA,SAAS,EAAE,EAAb;AAAiBP,MAAAA,YAAY,EAAE;AAA/B,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,MAA5B;AACI,IAAA,SAAS,EAAER,WADf;AAC4B,IAAA,KAAK,EAAC,UADlC;AAEI,IAAA,QAAQ,EAAEH,QAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AACI,IAAA,SAAS,EAAEG,WADf;AAC4B,IAAA,KAAK,EAAC,UADlC;AAEI,IAAA,QAAQ,EAAEH,QAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EASI;AAAK,IAAA,KAAK,EAAE;AAAEkB,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAED,UAAhC;AAA4C,IAAA,KAAK,EAAC,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CATJ,CADJ;AAeH,CAjBD;;AAmBA,eAAepB,SAAS,CAAC;AACrBsB,EAAAA,IAAI,EAAE,WADe,CACH;;AADG,CAAD,CAAT,CAEZL,SAFY,CAAf","sourcesContent":["import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport { Button, FormControl } from \"react-bootstrap\";\n\nconst required = value => value ? undefined : 'Required!'\n\nconst renderField = ({ input, label, type, meta: { touched, error, warning } }) => (\n    <div style={{ marginBottom: 10 }}>\n            {touched && ((error && <span style={{ fontWeight: \"bold\", color: \"red\" }}>{error}</span>))}\n            <FormControl {...input} placeholder={label} type={type} />\n    </div>\n)\n\nconst LoginForm = (props) => {\n    const { handleSubmit, submitting } = props\n    return (\n        <form onSubmit={handleSubmit} style={{ marginTop: 50, marginBottom: 50 }}>\n            <Field name=\"username\" type=\"text\"\n                component={renderField} label=\"Username\"\n                validate={required}\n            />\n            <Field name=\"password\" type=\"password\"\n                component={renderField} label=\"Password\"\n                validate={required}\n            />\n            <div style={{ marginTop: 10 }}>\n                <Button type=\"submit\" disabled={submitting} color=\"primary\" >Submit</Button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({\n    form: 'LoginForm' // a unique identifier for this form\n})(LoginForm)"]},"metadata":{},"sourceType":"module"}